package Data::Printer::Filter::DateTime;
use strict;
use warnings;
use Data::Printer::Filter;
use Term::ANSIColor;

filter 'Time::Piece', sub {
    return _format($_[0]->cdate, @_ );
};

filter 'DateTime', sub {
    my ($obj, $p) = @_;
    my $string = "$obj";
    if ( not exists $p->{datetime}{show_timezone} or $p->{datetime}{show_timezone} ) {
        $string .= ' [' . $obj->time_zone->name . ']';
    }
    return _format( $string, @_ );
};

# DateTime::TimeZone filters
filter '-class' => sub {
    my ($obj, $properties) = @_;

    if ( $obj->isa('DateTime::TimeZone' ) ) {
        return $obj->name;
    }
    else {
        return;
    }
};

filter 'DateTime::Incomplete', sub {
    return _format( $_[0]->iso8601, @_ );
};

filter 'DateTime::Duration', sub {
    my ($object, $p) = @_;

    my @dur = $object->in_units(
         qw(years months days hour